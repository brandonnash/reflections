q. How did viewing a diff between two versions of a file help you see the bug
A. Diff made it much easier to find the different between the two files, only having to look at the different lines made finding the typo easier. 
Q. How can the entire history of a file make you a more efficient programmer in the long term?
The ability to see mistakes you've made, what you've changed over time will help you understand how you've grown as a programmer, let you see how you've tidied up some or maybe how you've lost your way doing some other things. 
Q. Pros vs cons of manual vs automatic save. 
A. When programming a automatic save just doesn't make sense. if you haven't completed a logical step then the code wouldn't execute, you could even be in the middle of a line. Sometimes fixing a bug which could be quick and easy wouldn't get a auto save. thats a great time to save and in the future if it caused other bugs you know you can compare those two version to figure out what caused the new bug. 
Q. Why do some version control programs allow you to commit to multiple files at once verse one. 
A. Programming uses multiple files, and git is designed for programming code. somethign like google docs or dropbox is more of a presentation/report, a one file at a time kind of thing. 
Q. How can you use the commands git log and git diff to view the history of a file?
A. git log will give you the version numbers you'll need to use git diff to view the difference between the two logs. 
Q. how might using version control make it easier for you to try something that might break the coce?
A. using version control can help you find when you made the error, and pinpoint what caused it making correcting it fast and easy. 
